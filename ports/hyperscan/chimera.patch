diff --git a/chimera/CMakeLists.txt b/chimera/CMakeLists.txt
index 1cd66a3..cf58f46 100644
--- a/chimera/CMakeLists.txt	2019-04-26 11:44:30.000000000 -0700
+++ b/chimera/CMakeLists.txt	2019-07-10 10:35:41.054849100 -0700
@@ -27,12 +27,41 @@
     ch_scratch.c
 )
 
-add_library(chimera STATIC ${chimera_SRCS})
+if (WIN32 AND (BUILD_STATIC_AND_SHARED OR BUILD_SHARED_LIBS))
+    SET(chimera_internal_OBJS
+        $<TARGET_OBJECTS:hs_exec_shared>
+        $<TARGET_OBJECTS:hs_compile_shared>
+        $<TARGET_OBJECTS:pcreobjs>
+    )
+
+    add_library(chimera SHARED ${chimera_internal_OBJS} ${chimera_SRCS} chimera.def)
+
+    SET_SOURCE_FILES_PROPERTIES(
+      ${chimera_internal_OBJS}
+      PROPERTIES
+      EXTERNAL_OBJECT true
+      GENERATED true
+    )
+    set_target_properties(chimera PROPERTIES
+        VERSION ${LIB_VERSION}
+        SOVERSION ${LIB_SOVERSION}
+        OUTPUT_NAME chimera
+        MACOSX_RPATH ON
+        LINKER_LANGUAGE CXX)
+
+    install(TARGETS chimera
+        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
+else()
+    add_library(chimera STATIC ${chimera_SRCS})
+
+    install(TARGETS chimera DESTINATION ${CMAKE_INSTALL_LIBDIR})
+endif()
+
 add_dependencies(chimera hs pcre)
 target_link_libraries(chimera hs pcre)
 
-install(TARGETS chimera DESTINATION ${CMAKE_INSTALL_LIBDIR})
-
 if (NOT WIN32)
     # expand out library names for pkgconfig static link info
     foreach (LIB ${CMAKE_CXX_IMPLICIT_LINK_LIBRARIES})
diff --git a/CMakeLists.txt b/CMakeLists.txt
index a37eaa9..934179b 100644
--- a/CMakeLists.txt	2019-04-26 11:44:30.000000000 -0700
+++ b/CMakeLists.txt	2019-07-10 10:35:41.052850200 -0700
@@ -150,9 +150,6 @@
             set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /O3 /Qstd=c99 /Qrestrict /wd4267 /Qdiag-disable:remark")
             set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /O2 /Qstd=c++11 /Qrestrict /QxHost /wd4267 /wd4800 /Qdiag-disable:remark -DBOOST_DETAIL_NO_CONTAINER_FWD -D_SCL_SECURE_NO_WARNINGS")
         else()
-            # todo: change these as required
-            #set(ARCH_C_FLAGS "/arch:AVX2")
-            #set(ARCH_CXX_FLAGS "/arch:AVX2")
             set(MSVC_WARNS "/wd4101 /wd4146 /wd4172 /wd4200 /wd4244 /wd4267 /wd4307 /wd4334 /wd4805 /wd4996 -D_CRT_SECURE_NO_WARNINGS")
             set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  /O2 ${MSVC_WARNS}")
             set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /O2 ${MSVC_WARNS} /wd4800 -DBOOST_DETAIL_NO_CONTAINER_FWD")
@@ -513,7 +510,7 @@
 endif()
 
 # we need static libs for Chimera - too much deep magic for shared libs
-if (CORRECT_PCRE_VERSION AND PCRE_BUILD_SOURCE AND BUILD_STATIC_LIBS)
+if (CORRECT_PCRE_VERSION AND PCRE_BUILD_SOURCE)
     set(BUILD_CHIMERA TRUE)
 endif()
 
diff --git a/tools/CMakeLists.txt b/tools/CMakeLists.txt
index a37eaa9..934179b 100644
--- a/tools/CMakeLists.txt	2019-04-26 11:44:30.000000000 -0700
+++ b/tools/CMakeLists.txt	2019-07-08 15:17:11.659799900 -0700
@@ -12,6 +12,7 @@
 if (WIN32)
     add_subdirectory(hscheck)
     add_subdirectory(hsbench)
+    add_subdirectory(hsdump)
     add_subdirectory(hscollider)
 else()
     # add any subdir with a cmake file
diff --git a/tools/hscheck/CMakeLists.txt b/tools/hscheck/CMakeLists.txt
index a37eaa9..934179b 100644
--- a/tools/hscheck/CMakeLists.txt	2019-04-26 11:44:30.000000000 -0700
+++ b/tools/hscheck/CMakeLists.txt	2019-07-10 10:35:56.815556600 -0700
@@ -9,14 +9,21 @@
 if (BUILD_CHIMERA)
     include_directories(${PCRE_INCLUDE_DIRS})
     add_definitions(-DHS_HYBRID)
+endif()
+
+if(WIN32 AND (BUILD_STATIC_AND_SHARED OR BUILD_SHARED_LIBS))
+    add_executable(hscheck ${hscheck_SOURCES} $<TARGET_OBJECTS:hs_compile_shared> $<TARGET_OBJECTS:hs_exec_shared>)
+else()
     add_executable(hscheck ${hscheck_SOURCES})
+endif()
+
+if (BUILD_CHIMERA)
     if(NOT WIN32)
         target_link_libraries(hscheck hs chimera ${PCRE_LDFLAGS} expressionutil pthread)
     else()
         target_link_libraries(hscheck hs chimera pcre expressionutil)
     endif()
 else()
-    add_executable(hscheck ${hscheck_SOURCES})
     if(NOT WIN32)
         target_link_libraries(hscheck hs expressionutil pthread)
     else()
diff --git a/tools/hsdump/CMakeLists.txt b/tools/hsdump/CMakeLists.txt
index a37eaa9..934179b 100644
--- a/tools/hsdump/CMakeLists.txt	2019-04-26 11:44:30.000000000 -0700
+++ b/tools/hsdump/CMakeLists.txt	2019-07-10 10:35:56.816556400 -0700
@@ -10,6 +10,11 @@
 set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_C_FLAGS}")
 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${EXTRA_CXX_FLAGS}")
 
-add_executable(hsdump main.cpp)
+if(WIN32 AND (BUILD_STATIC_AND_SHARED OR BUILD_SHARED_LIBS))
+    add_executable(hsdump main.cpp $<TARGET_OBJECTS:hs_compile_shared> $<TARGET_OBJECTS:hs_exec_shared>)
+else()
+    add_executable(hsdump main.cpp)
+endif()
+
 target_link_libraries(hsdump hs expressionutil crosscompileutil)
 
diff --git a/unit/CMakeLists.txt b/unit/CMakeLists.txt
index a37eaa9..934179b 100644
--- a/unit/CMakeLists.txt	2019-04-26 11:44:30.000000000 -0700
+++ b/unit/CMakeLists.txt	2019-07-10 10:35:56.830548800 -0700
@@ -129,9 +129,21 @@
     internal/main.cpp
     )
 
+if (WIN32 AND (BUILD_STATIC_AND_SHARED OR BUILD_SHARED_LIBS))
+    add_executable(unit-internal ${unit_internal_SOURCES} $<TARGET_OBJECTS:hs_compile_shared> $<TARGET_OBJECTS:hs_exec_shared>)
+else()
+    add_executable(unit-internal ${unit_internal_SOURCES})
+endif()
+
+set_target_properties(unit-internal PROPERTIES COMPILE_FLAGS "${HS_CXX_FLAGS}")
+target_link_libraries(unit-internal hs corpusomatic)
 endif(NOT (RELEASE_BUILD OR FAT_RUNTIME))
 
 if (BUILD_CHIMERA)
+    if(MSVC)
+        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -stack:10000000")
+    endif()
+
     # enable Chimera unit tests
     set(unit_chimera_SOURCES
         ${gtest_SOURCES}
@@ -150,10 +162,11 @@
     if (NOT RELEASE_BUILD)
     add_custom_target(
         unit
+        COMMAND bin/unit-internal
         COMMAND bin/unit-hyperscan
         COMMAND bin/unit-chimera
         WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
-        DEPENDS unit-hyperscan unit-chimera
+        DEPENDS unit-internal unit-hyperscan unit-chimera
     )
     else ()
     add_custom_target(
@@ -171,9 +184,10 @@
     if (NOT RELEASE_BUILD)
     add_custom_target(
         unit
+        COMMAND bin/unit-internal
         COMMAND bin/unit-hyperscan
         WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
-        DEPENDS unit-hyperscan
+        DEPENDS unit-internal unit-hyperscan
     )
     else ()
     add_custom_target(
